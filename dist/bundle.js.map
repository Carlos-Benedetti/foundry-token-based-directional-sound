{"version":3,"file":"bundle.js","sources":["dist/bundle.js"],"sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\n\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.listenerToken = void 0;\r\nconst constants_1 = require(\"./scripts/constants\");\r\nconst DirectionalAmbientSound_1 = require(\"./scripts/util/DirectionalAmbientSound\");\r\nconst Logger_1 = __importDefault(require(\"./scripts/util/Logger\"));\r\nconst Target = constants_1.RELEASE;\r\nconst activeAmbientSounds = {};\r\nasync function ready() {\r\n    Logger_1.default.log(Logger_1.default.Low, \"ready\");\r\n    if (!(game instanceof Game))\r\n        return;\r\n    await game.audio.awaitFirstGesture();\r\n    // Do anything once the module is ready\r\n    const token = getActingToken({ warn: false });\r\n    if (!token)\r\n        return;\r\n    exports.listenerToken = token;\r\n    Logger_1.default.log(Logger_1.default.Low, `Token obtained, id: ${exports.listenerToken.id}`);\r\n    doTheSterio();\r\n}\r\nfunction onSceneUpdate(data, id, options) {\r\n    if (!(game instanceof Game))\r\n        return;\r\n    // If the viewed scene was updated, update the background volume\r\n    Logger_1.default.log(Logger_1.default.Low, \"A scene was updated\");\r\n    if (game.scenes.viewed.id == id._id) {\r\n        Logger_1.default.log(Logger_1.default.High, \"Received viewed scene update\");\r\n    }\r\n}\r\nfunction init() {\r\n    Logger_1.default.init(constants_1.APP_NAME, Target.threshold);\r\n    if (Target == constants_1.DEVEL) {\r\n        CONFIG.debug.hooks = true;\r\n    }\r\n    Logger_1.default.log(Logger_1.default.High, `Version ${constants_1.VERSION} is initialized (${Target.name} target)`);\r\n}\r\nfunction devModeReadyHandler({ registerPackageDebugFlag }) {\r\n    registerPackageDebugFlag('benettest');\r\n}\r\n/* ------------------------------------ */\r\n// When token is about to be moved\r\n/* ------------------------------------ */\r\nfunction updateTokenHandler(_token, _updateData, _options, _userId) {\r\n    Logger_1.default.log(Logger_1.default.Low, \"updateToken called\");\r\n    if (exports.listenerToken) {\r\n        doTheSterio();\r\n    }\r\n}\r\n/* ------------------------------------ */\r\n// When ambient sound is about to be moved\r\n/* ------------------------------------ */\r\nfunction updateAmbientSoundHandler(_ambientSound, _updateData, _options, _userId) {\r\n    Logger_1.default.log(Logger_1.default.Low, \"updateAmbientSound called\");\r\n    if (exports.listenerToken) {\r\n        doTheSterio();\r\n    }\r\n}\r\n/* ------------------------------------ */\r\n// When the user starts controlling a token\r\n/* ------------------------------------ */\r\nasync function controlTokenHandler(token, selected) {\r\n    if (!(game instanceof Game))\r\n        return;\r\n    Logger_1.default.log(Logger_1.default.Low, \"controlToken called\");\r\n    if (selected) {\r\n        Logger_1.default.log(Logger_1.default.Low, \"No token selected but getting from user\");\r\n        exports.listenerToken = getActingToken({\r\n            actor: game.user.character,\r\n            warn: false\r\n        });\r\n    }\r\n    else {\r\n        Logger_1.default.log(Logger_1.default.Low, \"Token Selected so it should be yours\");\r\n        exports.listenerToken = token;\r\n    }\r\n    if (exports.listenerToken) {\r\n        Logger_1.default.log(Logger_1.default.Low, \"Token obtained, id: \", exports.listenerToken.id);\r\n        Logger_1.default.log(Logger_1.default.Low, \"Got a Token, Doing the Sterio\");\r\n        await game.audio.awaitFirstGesture();\r\n        doTheSterio();\r\n    }\r\n    else {\r\n        Logger_1.default.log(Logger_1.default.Low, \"Looks like you are the GM\");\r\n    }\r\n}\r\nfunction renderPlayerListHandler(_, html) {\r\n    if (Target != constants_1.DEVEL)\r\n        return;\r\n    if (!(game instanceof Game))\r\n        return;\r\n    const loggedInUserListItem = html.find(`[data-user-id=\"${game.userId}\"]`);\r\n    loggedInUserListItem.append(\"<div><p>TDS Count: </p><b class='tds-listeners'></b></div>\");\r\n}\r\nfunction doTheSterio() {\r\n    if (!(game instanceof Game))\r\n        return;\r\n    if (game.audio.locked)\r\n        return;\r\n    if (!exports.listenerToken)\r\n        return;\r\n    //prepare ambientSound\r\n    const ambientSounds = game.canvas.sounds.placeables;\r\n    const updateTime = new Date();\r\n    for (const ambientSound of ambientSounds) {\r\n        if (!ambientSound.isAudible) {\r\n            Logger_1.default.log(Logger_1.default.Medium, \"Sound not Audible for (probably is just turned off)\");\r\n            continue;\r\n        }\r\n        if (!ambientSound.sound.context) {\r\n            Logger_1.default.log(Logger_1.default.Medium, \"No Audio Context, waiting for user interaction\");\r\n            continue;\r\n        }\r\n        if (!activeAmbientSounds[ambientSound.id]) {\r\n            activeAmbientSounds[ambientSound.id] = new DirectionalAmbientSound_1.DirectionalAmbientSound(ambientSound);\r\n            activeAmbientSounds[ambientSound.id].connect();\r\n        }\r\n        activeAmbientSounds[ambientSound.id].lastUpdate = updateTime;\r\n    }\r\n    for (const [key, ambientSound] of Object.entries(activeAmbientSounds)) {\r\n        if (ambientSound.lastUpdate != updateTime) {\r\n            ambientSound.disconnect();\r\n            delete activeAmbientSounds[key];\r\n            continue;\r\n        }\r\n        ambientSound.listenerUpdateHandler(exports.listenerToken);\r\n    }\r\n    if (Target != constants_1.DEVEL)\r\n        return;\r\n    //[debug]show amount of active soundLayers\r\n    const tdsListenersEle = document.querySelector('.tds-listeners');\r\n    if (!tdsListenersEle) {\r\n        Logger_1.default.log(Logger_1.default.Medium, \".tds-listeners not found\");\r\n        return;\r\n    }\r\n    tdsListenersEle.innerHTML = `${Object.entries(activeAmbientSounds).length}`;\r\n}\r\nHooks.on(\"init\", init);\r\nHooks.on(\"ready\", ready);\r\nHooks.on(\"updateScene\", onSceneUpdate);\r\nHooks.on(\"updateToken\", updateTokenHandler);\r\nHooks.on(\"updateAmbientSound\", updateAmbientSoundHandler);\r\nHooks.on(\"controlToken\", controlTokenHandler);\r\nHooks.on('renderPlayerList', renderPlayerListHandler);\r\nHooks.once('devModeReady', devModeReadyHandler);\r\n\n},{\"./scripts/constants\":2,\"./scripts/util/DirectionalAmbientSound\":5,\"./scripts/util/Logger\":7}],2:[function(require,module,exports){\n\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DEVEL = exports.RELEASE = exports.VERSION = exports.APP_NAME = void 0;\r\nconst Logger_1 = __importDefault(require(\"./util/Logger\"));\r\nexports.APP_NAME = 'token-based-directional-sound';\r\nexports.VERSION = '0.0.1-alpha';\r\n/** Target for end users */\r\nexports.RELEASE = {\r\n    threshold: Logger_1.default.High,\r\n    name: \"Release\"\r\n};\r\n/** Target for running in foundry as a developer */\r\nexports.DEVEL = {\r\n    threshold: Logger_1.default.Low,\r\n    name: \"Devel\"\r\n};\r\n\n},{\"./util/Logger\":7}],3:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DirectionalAmbientSoundStates = void 0;\r\nvar DirectionalAmbientSoundStates;\r\n(function (DirectionalAmbientSoundStates) {\r\n    DirectionalAmbientSoundStates[DirectionalAmbientSoundStates[\"DISCONNECTED\"] = 0] = \"DISCONNECTED\";\r\n    DirectionalAmbientSoundStates[DirectionalAmbientSoundStates[\"CONNECTED\"] = 1] = \"CONNECTED\";\r\n})(DirectionalAmbientSoundStates = exports.DirectionalAmbientSoundStates || (exports.DirectionalAmbientSoundStates = {}));\r\n\n},{}],4:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AmbientSoundListenedUnconnectedError = void 0;\r\nclass AmbientSoundListenedUnconnectedError extends Error {\r\n    constructor() {\r\n        super('AmbientSound placeable got directionality update while sterio was disabled');\r\n    }\r\n}\r\nexports.AmbientSoundListenedUnconnectedError = AmbientSoundListenedUnconnectedError;\r\n\n},{}],5:[function(require,module,exports){\n\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.DirectionalAmbientSound = void 0;\r\nconst DirectionalAmbientSoundStates_1 = require(\"../errors/DirectionalAmbientSoundStates\");\r\nconst AmbientSoundListenedUnconnectedError_1 = require(\"./AmbientSoundListenedUnconnectedError\");\r\nconst Logger_1 = __importDefault(require(\"./Logger\"));\r\nclass DirectionalAmbientSound {\r\n    constructor(ambientSound) {\r\n        this.ambientSound = ambientSound;\r\n        this.state = DirectionalAmbientSoundStates_1.DirectionalAmbientSoundStates.DISCONNECTED;\r\n        this.lastUpdate = new Date();\r\n        const { sound } = this.ambientSound;\r\n        this.container = sound.container;\r\n        this.gainNode = this.container.gainNode;\r\n        const audioCtx = this.container.context;\r\n        this.source = this.container.sourceNode;\r\n        this.gainNodeL = audioCtx.createGain();\r\n        this.gainNodeR = audioCtx.createGain();\r\n        this.merger = audioCtx.createChannelMerger(2);\r\n        this.gainNodeL.connect(this.merger, 0, 0);\r\n        this.gainNodeR.connect(this.merger, 0, 1);\r\n    }\r\n    get connected() {\r\n        return this.state === DirectionalAmbientSoundStates_1.DirectionalAmbientSoundStates.CONNECTED;\r\n    }\r\n    connect() {\r\n        this.source.connect(this.gainNodeL);\r\n        this.source.connect(this.gainNodeR);\r\n        this.merger.connect(this.container.context.destination);\r\n        this.state = DirectionalAmbientSoundStates_1.DirectionalAmbientSoundStates.CONNECTED;\r\n    }\r\n    disconnect() {\r\n        this.gainNode.disconnect(this.gainNodeL);\r\n        this.gainNode.disconnect(this.gainNodeR);\r\n        this.merger.disconnect(this.container.context.destination);\r\n        this.state = DirectionalAmbientSoundStates_1.DirectionalAmbientSoundStates.DISCONNECTED;\r\n    }\r\n    listenerUpdateHandler(listener) {\r\n        // checks if this ambient sound should recive updates\r\n        if (!this.connected) {\r\n            throw new AmbientSoundListenedUnconnectedError_1.AmbientSoundListenedUnconnectedError();\r\n        }\r\n        //             Simulating Ears\r\n        //                   X\r\n        //     --------------------------------\r\n        //   |\r\n        //   |\r\n        //   |   (radius) - center + (radius)\r\n        // Y | I--------------I--------------I\r\n        //   | (leftEar)   [token]   (rightEar)\r\n        //   |\r\n        //   |\r\n        // \r\n        const head = listener.clone();\r\n        const leftEar = new PIXI.Graphics();\r\n        const rightEar = new PIXI.Graphics();\r\n        head.addChild(leftEar);\r\n        leftEar.position.set(0, head.center.y);\r\n        head.addChild(rightEar);\r\n        rightEar.position.set(head.width, head.center.y);\r\n        // then getting the distance bettwen then and the target      \r\n        //\r\n        //                   X\r\n        //     --------------------------------\r\n        //   |\r\n        //   |         [AmbientSound]\r\n        //   |           /         \\\r\n        //   |          /           \\ \r\n        //   |         /             \\\r\n        //   |  (leftDistance)  (rightDistance)\r\n        //   |       /                 \\\r\n        //   |      /                   \\\r\n        //   |     /                     \\  \r\n        //   |    /                       \\\r\n        // Y | I--------------I--------------I\r\n        //   | (leftEar)   [token]   (rightEar)\r\n        //   |\r\n        //   |\r\n        const leftDistance = canvas.grid.measureDistance(listener.center, leftEar);\r\n        const rightDistance = canvas.grid.measureDistance(listener.center, rightEar);\r\n        const { width: headWidth } = listener;\r\n        // \r\n        // I---------------I       (leftDistance)\r\n        // I---------------------I (rightDistance)\r\n        //             I---------I (headWidth)\r\n        //                 I-----I (deltaW) = diference in distances \r\n        // \r\n        const deltaW = leftDistance - rightDistance;\r\n        //gets the gain bettewn 1 and 0\r\n        const leftGain = ((headWidth - deltaW) / 2) - (headWidth - 1);\r\n        const rightGain = ((headWidth + deltaW) / 2) - (headWidth - 1);\r\n        const audioCtx = this.container.context;\r\n        this.gainNodeL.gain.setValueAtTime(leftGain, audioCtx.currentTime);\r\n        this.gainNodeR.gain.setValueAtTime(rightGain, audioCtx.currentTime);\r\n        Logger_1.default.log(Logger_1.default.Low, `[Sound Updated ${this.ambientSound.id}] L: ${leftGain} | R: ${rightGain} \\\\ Delta L: ${leftDistance} | Delta R: ${rightDistance} | Delta W: ${deltaW}`);\r\n    }\r\n}\r\nexports.DirectionalAmbientSound = DirectionalAmbientSound;\r\n\n},{\"../errors/DirectionalAmbientSoundStates\":3,\"./AmbientSoundListenedUnconnectedError\":4,\"./Logger\":7}],6:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LogLevel = void 0;\r\nclass LogLevel {\r\n    /**\r\n     * Create a LogLevel object\r\n     * @param {String} name - Description for the log level\r\n     * @param {Number} value - Value used for thresholding. Higher -> More visibility\r\n     */\r\n    constructor(name, value) {\r\n        this._name = \"\";\r\n        this._value = 0;\r\n        this._name = name;\r\n        this._value = value;\r\n    }\r\n    /**\r\n     * Get the name of the log level\r\n     */\r\n    get name() {\r\n        return this._name;\r\n    }\r\n    /**\r\n     * Get the value of the log level\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n}\r\nexports.LogLevel = LogLevel;\r\n\n},{}],7:[function(require,module,exports){\n\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LogLevel_1 = require(\"./LogLevel\");\r\nclass Logger {\r\n    /**\r\n     * Initializes the Logger object with a mod name and a log level\r\n     * @param {String} name - The module name, prefixed to all log messages\r\n     * @param {LogLevel} threshold - The minimum level of log messages to display\r\n     */\r\n    static init(name, threshold) {\r\n        Logger.moduleName = name;\r\n        Logger.threshold = threshold;\r\n        this.log(threshold, `Set log threshold to ${threshold.name}`);\r\n    }\r\n    static log(level, ...message) {\r\n        if (Logger.threshold.value <= level.value) {\r\n            console.log(...[`[${this.moduleName}]: `, ...message]);\r\n        }\r\n    }\r\n}\r\nexports.default = Logger;\r\n/**\r\n * Displays information of develepment concerns\r\n */\r\nLogger.Low = new LogLevel_1.LogLevel(\"low\", 1);\r\n/**\r\n * Displays information for unusual circumstances\r\n */\r\nLogger.Medium = new LogLevel_1.LogLevel(\"medium\", 2);\r\n/**\r\n * Displays information for user visible changes\r\n */\r\nLogger.High = new LogLevel_1.LogLevel(\"high\", 3);\r\n/**\r\n * Used to display no logging\r\n */\r\nLogger.None = new LogLevel_1.LogLevel(\"none\", Infinity);\r\n/**\r\n * Stores the name of the module\r\n */\r\nLogger.moduleName = \"Unnamed Module\";\r\n/**\r\n * The current debug threshold\r\n */\r\nLogger.threshold = Logger.None;\r\n\n},{\"./LogLevel\":6}]},{},[1]);\n"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","__importDefault","this","mod","__esModule","default","Object","defineProperty","value","listenerToken","constants_1","DirectionalAmbientSound_1","Logger_1","Target","RELEASE","activeAmbientSounds","doTheSterio","game","Game","audio","locked","key","ambientSound","ambientSounds","canvas","sounds","placeables","updateTime","Date","isAudible","sound","context","id","DirectionalAmbientSound","connect","lastUpdate","log","Medium","entries","disconnect","listenerUpdateHandler","DEVEL","tdsListenersEle","document","querySelector","innerHTML","Hooks","on","init","APP_NAME","threshold","CONFIG","debug","hooks","High","VERSION","name","async","token","Low","await","awaitFirstGesture","getActingToken","warn","data","options","scenes","viewed","_id","_token","_updateData","_options","_userId","_ambientSound","selected","actor","user","character","_","html","find","userId","append","once","registerPackageDebugFlag","./scripts/constants","./scripts/util/DirectionalAmbientSound","./scripts/util/Logger","2","./util/Logger","3","DirectionalAmbientSoundStates","4","AmbientSoundListenedUnconnectedError","constructor","super","5","DirectionalAmbientSoundStates_1","AmbientSoundListenedUnconnectedError_1","state","DISCONNECTED","container","gainNode","audioCtx","source","sourceNode","gainNodeL","createGain","gainNodeR","merger","createChannelMerger","connected","CONNECTED","destination","listener","head","clone","leftEar","PIXI","Graphics","rightEar","leftDistance","addChild","position","set","center","y","width","grid","measureDistance","rightDistance","headWidth","deltaW","leftGain","rightGain","gain","setValueAtTime","currentTime","../errors/DirectionalAmbientSoundStates","./AmbientSoundListenedUnconnectedError","./Logger","6","LogLevel","_name","_value","7","LogLevel_1","Logger","moduleName","level","message","console","None","Infinity","./LogLevel"],"mappings":"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"}